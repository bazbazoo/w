#!/usr/bin/env python

def get_logger():
  from logging import Formatter, StreamHandler, getLogger

  ch = StreamHandler()
  ch.setFormatter(Formatter('%(levelname)s %(message)s'))

  logger = getLogger('root')
  logger.addHandler(ch)

  return logger

def get_args():
  from argparse import ArgumentParser

  p = ArgumentParser()

  p.add_argument(
    'root',
    metavar='R',
    type=str,
    nargs='?',
    default='.')

  p.add_argument(
    '--ip', '-a',
    type=str,
    dest='ip',
    default='0.0.0.0')

  p.add_argument(
    '--port', '-p',
    type=int,
    dest='port',
    default=8000)

  p.add_argument(
    '--debug', '-d',
    action='store_true',
    dest='debug',
    default=False)

  return p.parse_args()

args = get_args()

from w import run

cmd = lambda: run(args.ip, args.port, args.root, get_logger())

if not args.debug:
  cmd()
else:
  from web import config
  from pdb import post_mortem
  from sys import exc_info
  from traceback import print_exc

  config.debug = args.debug

  try:
    cmd()
  except:
    type, value, tb = exc_info()
    print_exc()
    post_mortem(tb)
